{"version":3,"file":"view.js","mappings":";;;;;;;;;AAAA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;;;;;;SCJA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACNAA,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;AACrB;AACA;AACA;AAC6D;AAE7D,MAAM;EAAEG;AAAM,CAAC,GAAGF,+DAAK,CAAE,SAAS,EAAE;EACnCE,KAAK,EAAE;IACNC,MAAM,EAAE;EACP,CAAC;EACDC,OAAO,EAAE;IACVC,OAAO,EAAEA,CAAA,KAAM;MACb;MACAP,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBG,KAAK,CAACC,MAAM,GAAG,CAACD,KAAK,CAACC,MAAM;IAC9B;EACC;AACH,CAAE,CAAC,C","sources":["webpack://reading-mode/external module \"@wordpress/interactivity\"","webpack://reading-mode/webpack/bootstrap","webpack://reading-mode/webpack/runtime/make namespace object","webpack://reading-mode/./src/view.js"],"sourcesContent":["var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","console.log('loaded');\n/**\n * WordPress dependencies\n */\nimport { store, getContext } from '@wordpress/interactivity';\n\nconst { state } = store( 'bigbite', {\n\tstate: {\n\t\tisDark: false,\n\t  },\n\t  actions: {\n\t\tsetMode: () => {\n\t\t  // state is global\n\t\t  console.log('is dark');\n\t\t  state.isDark = !state.isDark;\n\t\t},\n\t  },\n} );\n"],"names":["console","log","store","getContext","state","isDark","actions","setMode"],"sourceRoot":""}